//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Consumer.ExampleService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/ExampleWcfService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AirLine", Namespace="http://schemas.datacontract.org/2004/07/ExampleWcfService")]
    [System.SerializableAttribute()]
    public partial class AirLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExampleService.IExampleService")]
    public interface IExampleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/GetData", ReplyAction="http://tempuri.org/IExampleService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/GetData", ReplyAction="http://tempuri.org/IExampleService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IExampleService/GetDataUsingDataContractResponse")]
        Consumer.ExampleService.CompositeType GetDataUsingDataContract(Consumer.ExampleService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IExampleService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Consumer.ExampleService.CompositeType> GetDataUsingDataContractAsync(Consumer.ExampleService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/GetAllAirlines", ReplyAction="http://tempuri.org/IExampleService/GetAllAirlinesResponse")]
        Consumer.ExampleService.AirLine[] GetAllAirlines();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/GetAllAirlines", ReplyAction="http://tempuri.org/IExampleService/GetAllAirlinesResponse")]
        System.Threading.Tasks.Task<Consumer.ExampleService.AirLine[]> GetAllAirlinesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/ConvertToString", ReplyAction="http://tempuri.org/IExampleService/ConvertToStringResponse")]
        string ConvertToString(int input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/ConvertToString", ReplyAction="http://tempuri.org/IExampleService/ConvertToStringResponse")]
        System.Threading.Tasks.Task<string> ConvertToStringAsync(int input);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExampleServiceChannel : Consumer.ExampleService.IExampleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExampleServiceClient : System.ServiceModel.ClientBase<Consumer.ExampleService.IExampleService>, Consumer.ExampleService.IExampleService {
        
        public ExampleServiceClient() {
        }
        
        public ExampleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExampleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExampleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExampleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Consumer.ExampleService.CompositeType GetDataUsingDataContract(Consumer.ExampleService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Consumer.ExampleService.CompositeType> GetDataUsingDataContractAsync(Consumer.ExampleService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public Consumer.ExampleService.AirLine[] GetAllAirlines() {
            return base.Channel.GetAllAirlines();
        }
        
        public System.Threading.Tasks.Task<Consumer.ExampleService.AirLine[]> GetAllAirlinesAsync() {
            return base.Channel.GetAllAirlinesAsync();
        }
        
        public string ConvertToString(int input) {
            return base.Channel.ConvertToString(input);
        }
        
        public System.Threading.Tasks.Task<string> ConvertToStringAsync(int input) {
            return base.Channel.ConvertToStringAsync(input);
        }
    }
}
